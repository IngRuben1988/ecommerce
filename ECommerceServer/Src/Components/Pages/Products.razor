<!-- Components/Pages/Products.razor -->
@page "/products"
@* @layout MainLayout // Esto es implícito si MainLayout es tu DefaultLayout, o puedes ponerlo explícitamente *@
@inject ECommerceServer.Src.Services.SimulatedAuthStateService AuthStateService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@* Modal de Notificación (como lo definimos antes, usando Bootstrap) *@
<SimpleModal IsVisible="showNotificationModal"
             Title="¡Producto Agregado!"
             Message="@notificationMessage"
             ConfirmButtonText="Entendido"
             OnClose="CerrarModalNotificacion" />

@if (isAllowedToView)
{
    <div class="container py-4"> @* Contenedor principal de Bootstrap con padding vertical *@
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h2">Nuestra Selección de Productos</h1> @* Título más estándar de Bootstrap *@
            @if (carrito.Count > 0)
            {
                <button class="btn btn-outline-primary position-relative" @onclick="ToggleCarritoDisplay">
                    <i class="bi bi-cart3 me-1"></i>
                    Carrito
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @carrito.Count
                        <span class="visually-hidden">productos en el carrito</span>
                    </span>
                </button>
            }
        </div>


        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4"> @* Grid de Bootstrap responsivo *@
            @foreach (var producto in productos)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm product-card"> @* card, h-100 para misma altura, sombra sutil *@
                        <img src="@producto.ImagenUrl" alt="@producto.Nombre" class="card-img-top product-image" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-name">@producto.Nombre</h5>
                            <p class="card-text product-price mb-auto">@producto.Precio.ToString("C")</p> @* mb-auto para empujar botón abajo *@
                            <button class="btn btn-primary w-100 mt-2 add-to-cart-btn" @onclick="() => AgregarAlCarritoYMostrarNotificacion(producto)">
                                <i class="bi bi-cart-plus-fill me-1"></i> Agregar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        @* Sección del Carrito (se muestra/oculta o es un offcanvas) *@
        @if (showCarrito && carrito.Count > 0)
        {
            <div class="mt-5 p-4 border rounded shadow-sm bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="h4">Resumen del Carrito</h2>
                    <button class="btn-close" @onclick="ToggleCarritoDisplay" aria-label="Cerrar carrito"></button>
                </div>
                <hr class="my-3">
                @if (carrito.Any())
                {
                    <ul class="list-group list-group-flush mb-3">
                        @foreach (var item in carrito)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center bg-transparent px-0">
                                <div>
                                    @item.Nombre
                                    <small class="d-block text-muted">@item.Precio.ToString("C")</small>
                                </div>
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => RemoverDelCarrito(item)">
                                    <i class="bi bi-trash3"></i>
                                </button>
                            </li>
                        }
                    </ul>
                    <div class="d-flex justify-content-between align-items-center fw-bold border-top pt-3">
                        <span>Total:</span>
                        <span>@carrito.Sum(p => p.Precio).ToString("C")</span>
                    </div>
                    <div class="d-grid mt-3">
                        <button class="btn btn-success">Proceder al Pago</button>
                    </div>
                }
                else
                {
                    <p class="text-center text-muted">Tu carrito está vacío.</p>
                }
            </div>
        }
    </div>
}
else
{
    <p class="text-center p-5">Verificando acceso...</p>
}


@code {
    private bool isAllowedToView = false;
    private List<Producto> productos = new();
    private List<Producto> carrito = new();

    // Para el modal de notificación
    private bool showNotificationModal = false;
    private string notificationMessage = "";

    // Para mostrar/ocultar la sección del carrito
    private bool showCarrito = false;

    protected override void OnInitialized()
    {
        if (!AuthStateService.IsLoggedIn)
        {
            NavigationManager.NavigateTo("/login", replace: true);
        }
        else
        {
            isAllowedToView = true;
            CargarProductos();
        }
        base.OnInitialized();
    }

    private void CargarProductos()
    {
        productos = new()
        {
            new Producto { Id = 1, Nombre = "Viga", Precio = 999.99m, ImagenUrl = "https://extrutech.mx/wp-content/uploads/2025/04/vigas-3-size-web-6x4-1.avif" },
            new Producto { Id = 2, Nombre = "Ladrillo", Precio = 699.99m, ImagenUrl = "https://www.materialesjerez.com.mx/wp-content/uploads/2016/11/LadrilloREFRACTARIO-300x300.png" },
            new Producto { Id = 3, Nombre = "Cemento", Precio = 149.99m, ImagenUrl = "https://www.materialesjerez.com.mx/wp-content/uploads/2016/11/MULTIPLAST-bulto-300x300.png" },
            new Producto { Id = 4, Nombre = "Varillas", Precio = 89.99m, ImagenUrl = "https://www.materialesjerez.com.mx/wp-content/uploads/2016/10/Varilla-42-1-300x300.png" },
            new Producto { Id = 5, Nombre = "Caja de contacto", Precio = 399.99m, ImagenUrl = "	https://www.materialesjerez.com.mx/wp-content/uploads/2016/11/Caja-electrica-1-300x300.png" },
            new Producto { Id = 6, Nombre = "Manguera Naranja", Precio = 129.99m, ImagenUrl = "https://www.materialesjerez.com.mx/wp-content/uploads/2016/11/Manguera-Jerez-300x300.png" },
            new Producto { Id = 7, Nombre = "Termocret", Precio = 79.50m, ImagenUrl = "https://www.materialesjerez.com.mx/wp-content/uploads/2016/10/TERMOCRET-bulto-300x300.png" },
            new Producto { Id = 8, Nombre = "Tubo de Cimbra", Precio = 25.00m, ImagenUrl = "https://www.materialesjerez.com.mx/wp-content/uploads/2016/11/Cimbra-300x300.png" },
        };
    }

    private void AgregarAlCarritoYMostrarNotificacion(Producto producto)
    {
        var itemExistente = carrito.FirstOrDefault(p => p.Id == producto.Id);
        if (itemExistente == null) // Solo añadir si no existe para este ejemplo simple
        {
            carrito.Add(producto);
            notificationMessage = $"¡'{producto.Nombre}' ha sido agregado a tu carrito!";
        }
        else
        {
            // Opcional: Incrementar cantidad si ya existe, o mostrar otro mensaje
            notificationMessage = $"'{producto.Nombre}' ya está en tu carrito.";
        }
        showNotificationModal = true;
    }

    private void RemoverDelCarrito(Producto producto)
    {
        carrito.Remove(producto);
        if (!carrito.Any())
        {
            showCarrito = false; // Ocultar sección del carrito si está vacío
        }
    }

    private void CerrarModalNotificacion()
    {
        showNotificationModal = false;
    }

    private void ToggleCarritoDisplay()
    {
        showCarrito = !showCarrito;
    }

    public class Producto
    {
        public int Id { get; set; } // Importante para manejar el carrito
        public string? Nombre { get; set; }
        public decimal Precio { get; set; }
        public string? ImagenUrl { get; set; }
    }
}