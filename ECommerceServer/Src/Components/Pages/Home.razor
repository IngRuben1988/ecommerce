<!-- Components/Pages/Home.razor (o Index.razor si tu ruta raíz es esta) -->
@page "/"
@inject NavigationManager NavigationManager
@inject ECommerceServer.Src.Services.SimulatedAuthStateService AuthStateService 

@* Esta página no mostrará contenido, solo redirigirá.
   No es estrictamente necesario un @rendermode aquí si solo hace lógica de redirección
   en OnInitialized. Si tuviera UI que necesitara actualizarse, sí lo necesitaría. *@

@code {
    protected override void OnInitialized()
    {
        // Verificar el estado de login simulado
        if (!AuthStateService.IsLoggedIn)
        {
            // Si no está logueado, redirigir a la página de login.
            // 'replace: true' evita que la ruta raíz quede en el historial del navegador
            // si el usuario no estaba logueado.
            Console.WriteLine("Home.razor: User not logged in. Redirecting to /login.");
            NavigationManager.NavigateTo("/login", replace: true);
        }
        else
        {
            // Si está logueado, redirigir a la página de productos.
            // 'replace: true' también es bueno aquí para que la raíz no quede en el historial
            // como un paso intermedio innecesario.
            Console.WriteLine($"Home.razor: User '{AuthStateService.Username}' is logged in. Redirecting to /products.");
            NavigationManager.NavigateTo("/products", replace: true);
        }
        base.OnInitialized();
    }
}

@* Opcional: Mostrar un mensaje mientras ocurre la redirección.
   Este contenido se mostrará muy brevemente. *@
<p>Redirigiendo...</p>